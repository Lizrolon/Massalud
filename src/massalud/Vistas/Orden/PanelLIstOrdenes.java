/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package massalud.Vistas.Orden;

import java.sql.Connection;
import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import massalud.AccesoAdatos.AfiliadoData;
import massalud.AccesoAdatos.OrdenData;
import massalud.AccesoAdatos.PrestadorData;
import massalud.Entidades.Afiliado;
import massalud.Entidades.Orden;
import massalud.Entidades.Prestador;

/**
 *
 * @author daniel
 */
public class PanelLIstOrdenes extends javax.swing.JPanel {
    
    PrestadorData presD = new PrestadorData();
    AfiliadoData afiD = new AfiliadoData();
    OrdenData ordenD = new OrdenData();
    Orden orden = new Orden();
    
    private Connection con = null;
    DefaultTableModel modelo= new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int i, int i1) {
            return false;
        }
    };
   
    public PanelLIstOrdenes() {
        initComponents();
        cabecera();
        llenarTabla();
        LlenarFormaPago();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtOrdenes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlIdOrden = new javax.swing.JLabel();
        jtIdOrden = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcFPago = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jtImporte = new javax.swing.JTextField();
        jBGuardar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jcPrestador = new javax.swing.JCheckBox();
        jcAfialiado = new javax.swing.JCheckBox();
        jtIdAfiliado1 = new javax.swing.JTextField();
        jtIdPrestador1 = new javax.swing.JTextField();
        jBuscarFecha = new javax.swing.JLabel();
        jbuscarAfi = new javax.swing.JLabel();
        jbuscarp = new javax.swing.JLabel();
        jdFecha = new com.toedter.calendar.JDateChooser();
        jlEliminarPres = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtOrdenes.setBackground(new java.awt.Color(255, 255, 255));
        jtOrdenes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtOrdenesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtOrdenes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 680, 250));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("idPrestador");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 20));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("idAfiliado");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, -1));

        jlIdOrden.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jlIdOrden.setForeground(new java.awt.Color(51, 51, 51));
        jlIdOrden.setText("IdOrden");
        jPanel1.add(jlIdOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 20));

        jtIdOrden.setForeground(new java.awt.Color(0, 0, 0));
        jtIdOrden.setBorder(null);
        jtIdOrden.setCaretColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(jtIdOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 150, 20));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Fecha");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Forma de pago");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, -1, -1));

        jcFPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jcFPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 180, -1));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Importe");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, -1, 20));

        jtImporte.setForeground(new java.awt.Color(0, 0, 0));
        jtImporte.setBorder(null);
        jtImporte.setCaretColor(new java.awt.Color(0, 0, 0));
        jPanel1.add(jtImporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 180, 20));

        jBGuardar.setBackground(new java.awt.Color(0, 153, 255));
        jBGuardar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jBGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jBGuardar.setText("Guardar modificacion");
        jBGuardar.setBorder(null);
        jBGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jBGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 190, 30));

        jSeparator2.setForeground(new java.awt.Color(0, 102, 255));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 110, 10));

        jSeparator6.setForeground(new java.awt.Color(0, 102, 204));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 110, 10));

        jSeparator3.setForeground(new java.awt.Color(0, 102, 255));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, 150, 10));

        jSeparator5.setForeground(new java.awt.Color(0, 102, 204));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 180, 10));

        jcPrestador.setEnabled(false);
        jPanel1.add(jcPrestador, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 30, -1));

        jcAfialiado.setEnabled(false);
        jPanel1.add(jcAfialiado, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 30, -1));

        jtIdAfiliado1.setForeground(new java.awt.Color(0, 0, 0));
        jtIdAfiliado1.setBorder(null);
        jtIdAfiliado1.setCaretColor(new java.awt.Color(0, 0, 0));
        jtIdAfiliado1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtIdAfiliado1MousePressed(evt);
            }
        });
        jtIdAfiliado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIdAfiliado1ActionPerformed(evt);
            }
        });
        jtIdAfiliado1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtIdAfiliado1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtIdAfiliado1KeyTyped(evt);
            }
        });
        jPanel1.add(jtIdAfiliado1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 110, 20));

        jtIdPrestador1.setForeground(new java.awt.Color(0, 0, 0));
        jtIdPrestador1.setBorder(null);
        jtIdPrestador1.setCaretColor(new java.awt.Color(0, 0, 0));
        jtIdPrestador1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtIdPrestador1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtIdPrestador1MousePressed(evt);
            }
        });
        jtIdPrestador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIdPrestador1ActionPerformed(evt);
            }
        });
        jtIdPrestador1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtIdPrestador1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtIdPrestador1KeyTyped(evt);
            }
        });
        jPanel1.add(jtIdPrestador1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 110, 20));

        jBuscarFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/massalud/imagenes/search_find_lupa_21889.png"))); // NOI18N
        jBuscarFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBuscarFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBuscarFechaMouseClicked(evt);
            }
        });
        jPanel1.add(jBuscarFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 40, 30));

        jbuscarAfi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/massalud/imagenes/search_find_lupa_21889.png"))); // NOI18N
        jbuscarAfi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbuscarAfi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbuscarAfiMouseClicked(evt);
            }
        });
        jPanel1.add(jbuscarAfi, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 40, 30));

        jbuscarp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/massalud/imagenes/search_find_lupa_21889.png"))); // NOI18N
        jbuscarp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbuscarp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbuscarpMouseClicked(evt);
            }
        });
        jPanel1.add(jbuscarp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 40, 30));
        jPanel1.add(jdFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 140, -1));

        jlEliminarPres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/massalud/imagenes/eliminar32.png"))); // NOI18N
        jlEliminarPres.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlEliminarPres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlEliminarPresMouseClicked(evt);
            }
        });
        jPanel1.add(jlEliminarPres, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 40, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed

        try{
            if (jtIdAfiliado1.getText().isEmpty() || jtIdPrestador1.getText().isEmpty() || jtImporte.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "No pueden haber campos vacios");
                return;
            }
            int idOrden = Integer.parseInt(jtIdOrden.getText());
            if (jcAfialiado.isSelected()==false||jcPrestador.isSelected()==false) {
                return;
            }
            try {
                int idAfiliado = Integer.parseInt(jtIdAfiliado1.getText());
                Afiliado afi = afiD.buscarAfiliado(idAfiliado);
                if (afi == null) {
                    return;
                }
                try {
                    int idPrestador = Integer.parseInt(jtIdPrestador1.getText());
                    Prestador pres = presD.buscarPres(idPrestador);
                    if (pres == null) {
                        return;
                    }

                    String FormaPago = jcFPago.getSelectedItem().toString();

                    //revisar que importe sea un numero;
                    try {
                        int importe = Integer.parseInt(jtImporte.getText());

                        LocalDate fecha;

                        if (jdFecha.getDate() != null) {
                            fecha = jdFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                        } else {
                            JOptionPane.showMessageDialog(this, "Ingrese una Fecha");
                            return;
                        }

                        orden = new Orden(idOrden, afi, pres, fecha, FormaPago, importe);
                        ordenD.modificarOrd(orden);
                        Limpiar();
                        orden = null;
                        
                        llenarTabla();
                        
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Importe mal Ingresado"+e.getMessage());
                        return;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Id Prestador mal Ingresado");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Id Afiliado mal Ingresado");
                return;
            }

        }catch(NumberFormatException ex ){
            JOptionPane.showMessageDialog(this, "Id mal ingresado");
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jtOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtOrdenesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount()== 2) {
            
            
            int fila = jtOrdenes.getSelectedRow();
            
            jtIdOrden.setText(Integer.toString((int)modelo.getValueAt(fila, 0)));
        
            
            String idAFiliadoText = (String) modelo.getValueAt(fila, 1);
            int idA = Integer.parseInt(idAFiliadoText.replaceAll("[^0-9]", "")); 
            
            jtIdAfiliado1.setText(Integer.toString(idA));
            jcAfialiado.setSelected(true);
            
            
            String idPrestadorTExt = (String) modelo.getValueAt(fila, 2);
            int idP = Integer.parseInt(idPrestadorTExt.replaceAll("[^0-9]", ""));
       
            jtIdPrestador1.setText(Integer.toString(idP));
            jcPrestador.setSelected(true);
            
            String Fecha = (String) modelo.getValueAt(fila, 3);
            
            jdFecha.setDate(Date.valueOf(Fecha));
            
            String formaP = (String) modelo.getValueAt(fila, 4);
            
            jcFPago.setSelectedItem(formaP);
            
            int importe = (int) modelo.getValueAt(fila, 5);
            
            jtImporte.setText(Integer.toString(importe));
            
        }
    }//GEN-LAST:event_jtOrdenesMouseClicked

    private void jtIdAfiliado1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtIdAfiliado1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdAfiliado1MousePressed

    private void jtIdAfiliado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIdAfiliado1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdAfiliado1ActionPerformed

    private void jtIdAfiliado1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdAfiliado1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jtIdAfiliado1KeyReleased

    private void jtIdAfiliado1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdAfiliado1KeyTyped
        // TODO add your handling code here:
        try {
            String idAfiliadoTexto = jtIdAfiliado1.getText().trim();

            if (!idAfiliadoTexto.isEmpty()) {
                int idAfiliado = Integer.parseInt(idAfiliadoTexto);
                Afiliado afi = afiD.buscarAfiliado(idAfiliado);

                if (afi != null) {
                    jcAfialiado.setSelected(true);
                }else{
                    jcAfialiado.setSelected(false);
                    return;
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "ID de Afiliado mal ingresado");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error: " + ex.getMessage());
        }

    }//GEN-LAST:event_jtIdAfiliado1KeyTyped

    private void jtIdPrestador1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtIdPrestador1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdPrestador1MouseClicked

    private void jtIdPrestador1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtIdPrestador1MousePressed

    }//GEN-LAST:event_jtIdPrestador1MousePressed

    private void jtIdPrestador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIdPrestador1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtIdPrestador1ActionPerformed

    private void jtIdPrestador1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdPrestador1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jtIdPrestador1KeyReleased

    private void jtIdPrestador1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdPrestador1KeyTyped

        try {
            String idPrestadorTexto = jtIdPrestador1.getText().trim();
            if (!idPrestadorTexto.isEmpty()) {
                int idPrestado = Integer.parseInt(idPrestadorTexto);
                Prestador pres = presD.buscarPres(idPrestado);
                if (pres == null) {
                     jcPrestador.setSelected(false);
                    return;
                } else {
                    jcPrestador.setSelected(true);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Id Afiliado mal Ingresado" + e.getMessage());
        }catch(Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jtIdPrestador1KeyTyped

    private void jdFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdFechaMouseClicked

    }//GEN-LAST:event_jdFechaMouseClicked

    private void jBuscarFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBuscarFechaMouseClicked
      
            
            LocalDate fecha;

            if (jdFecha.getDate() != null) {
                fecha = jdFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            } else {
                JOptionPane.showMessageDialog(this, "Tiene que ingresar una fecha para poder buscar");
                return;
            }
            if (ordenD.ordenporfechaes(fecha).isEmpty()) {
            JOptionPane.showMessageDialog(this, "la fecha ingresada no tiene ordenes");
            return;
            }
            
            borrarT();
            
        for (Orden ord : ordenD.ordenporfechaes(fecha)){
            String Act = "";
            modelo.addRow(new Object[]{
                ord.getIdOrden(),
                ord.getAfiliado().getIdAfiliado()+" "+ord.getAfiliado().getNombre(),
                ord.getPrestador().getIdPrestador()+" "+ord.getPrestador().getNombre(),
                ord.getFecha().toString(),
                ord.getFormaPago(),
                ord.getImporte()
            });
        }
       
    }//GEN-LAST:event_jBuscarFechaMouseClicked

    private void jbuscarAfiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuscarAfiMouseClicked
        try {
            int id = Integer.parseInt(jtIdAfiliado1.getText());

            if (ordenD.listarOrdenporAfi(id).isEmpty()) {
                JOptionPane.showMessageDialog(this, "El afiliado no tiene ordenes activas");
                return;
            }
            borrarT();
            for (Orden ord : ordenD.listarOrdenporAfi(id)) {

                modelo.addRow(new Object[]{
                    ord.getIdOrden(),
                    ord.getAfiliado().getIdAfiliado() + " " + ord.getAfiliado().getNombre(),
                    ord.getPrestador().getIdPrestador() + " " + ord.getPrestador().getNombre(),
                    ord.getFecha().toString(),
                    ord.getFormaPago(),
                    ord.getImporte()
                });
            }
        } catch (NumberFormatException ex) {

            JOptionPane.showMessageDialog(this, "Debe ingresar un ID para poder buscar");

        }
    }//GEN-LAST:event_jbuscarAfiMouseClicked

    private void jbuscarpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuscarpMouseClicked
         try{
             
            
         
        int id = Integer.parseInt(jtIdPrestador1.getText());
        borrarT();
    for (Orden ord : ordenD.listarOrdenporPres(id) ){
            
            modelo.addRow(new Object[]{
                ord.getIdOrden(),
                ord.getAfiliado().getIdAfiliado()+" "+ord.getAfiliado().getNombre(),
                ord.getPrestador().getIdPrestador()+" "+ord.getPrestador().getNombre(),
                ord.getFecha().toString(),
                ord.getFormaPago(),
                ord.getImporte()
            });
        }
    }catch(NumberFormatException ex){
         JOptionPane.showMessageDialog(this, "Debe ingresar un ID para poder buscar" );
    } 
    }//GEN-LAST:event_jbuscarpMouseClicked

    private void jlEliminarPresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlEliminarPresMouseClicked
        
       try{ 
            if(jtIdOrden.getText().isEmpty()){
               JOptionPane.showMessageDialog(this, "Ingrese un id");
               return;
           }
        int idOr = Integer.parseInt(jtIdOrden.getText());
        ;
        ordenD.borrarOrdporPres(idOr);
        llenarTabla();
       }catch(NumberFormatException ex){
           JOptionPane.showMessageDialog(this, "ID mal ingresado");
       }
    }//GEN-LAST:event_jlEliminarPresMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JLabel jBuscarFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel jbuscarAfi;
    private javax.swing.JLabel jbuscarp;
    private javax.swing.JCheckBox jcAfialiado;
    private javax.swing.JComboBox<String> jcFPago;
    private javax.swing.JCheckBox jcPrestador;
    private com.toedter.calendar.JDateChooser jdFecha;
    private javax.swing.JLabel jlEliminarPres;
    private javax.swing.JLabel jlIdOrden;
    private javax.swing.JTextField jtIdAfiliado1;
    private javax.swing.JTextField jtIdOrden;
    private javax.swing.JTextField jtIdPrestador1;
    private javax.swing.JTextField jtImporte;
    private javax.swing.JTable jtOrdenes;
    // End of variables declaration//GEN-END:variables
 public void cabecera(){
        modelo.addColumn("idOrden");
        modelo.addColumn("Afiliado");
        modelo.addColumn("Prestador");
        modelo.addColumn("Fecha");
        modelo.addColumn("Forma de pago");
        modelo.addColumn("Importe");
        jtOrdenes.setModel(modelo);

}

    private void borrarT(){
    int indice =modelo.getRowCount()-1;
    for (int i = indice;i >= 0; i--) {
        modelo.removeRow(i);
    }

}
 
    public void llenarTabla(){
        OrdenData ordD = new OrdenData();
        
        borrarT();

        for (Orden ord : ordD.listarOrden()) {
            String Act = "";
            
            modelo.addRow(new Object[]{
                ord.getIdOrden(),
                ord.getAfiliado().getIdAfiliado()+" "+ord.getAfiliado().getNombre(),
                ord.getPrestador().getIdPrestador()+" "+ord.getPrestador().getNombre(),
                ord.getFecha().toString(),
                ord.getFormaPago(),
                ord.getImporte()
            });
        }
        }
    
    public void LlenarFormaPago(){
        jcFPago.removeAllItems();
        jcFPago.addItem("Efectivo");
        jcFPago.addItem("Tarjeta Debito");
        jcFPago.addItem("Tarjeta Credito");
      
    }
    public void Limpiar (){
       jtIdAfiliado1.setText("");
       jtIdOrden.setText("");
       jtIdPrestador1.setText("");
       jtImporte.setText("");
       jcFPago.setSelectedItem(null);
   }
    
}
